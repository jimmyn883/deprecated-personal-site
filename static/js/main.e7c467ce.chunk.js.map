{"version":3,"sources":["Components/Header.js","Components/About.js","Components/Portfolio.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","_ref","data","name","description","networks","social","map","network","_jsx","children","href","url","className","_jsxs","id","title","About","profilepic","image","bio","city","address","state","zip","email","resumeDownload","resumedownload","src","alt","concat","Portfolio","projects","projectImage","category","App","resumeData","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e7c467ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default function Header({data}) {\n\n   if(data){\n   var name = data.name;\n   var description= data.description;\n   var networks= data.social.map(function(network){\n      return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n   })\n   }\n\n   return (\n   <header id=\"home\">\n\n   <nav id=\"nav-wrap\">\n\n      <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n      <ul id=\"nav\" className=\"nav\">\n         <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n         <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n         <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n      </ul>\n\n   </nav>\n\n   <div className=\"row banner\">\n      <div className=\"banner-text\">\n         <h1 className=\"responsive-headline\">I'm {name}.</h1>\n         <h3>{description}</h3>\n         <hr />\n         <ul className=\"social\">\n            {networks}\n         </ul>\n      </div>\n   </div>\n\n   <p className=\"scrolldown\">\n      <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n   </p>\n\n</header>\n   );\n}\n","import React, { Component } from 'react';\n\nexport default function About({data}){\n\n   if(data){\n   var name = data.name;\n   var profilepic= \"images/\"+data.image;\n   var bio = data.bio;\n   var city = data.address.city;\n   var state = data.address.state;\n   var zip = data.address.zip;\n   var email = data.email;\n   var resumeDownload = data.resumedownload;\n   }\n\n   return (\n   <section id=\"about\">\n   <div className=\"row\">\n      <div className=\"three columns\">\n         <img className=\"profile-pic\"  src={profilepic} alt={`${name} Profile Pic`}/>\n      </div>\n      <div className=\"nine columns main-col\">\n         <h2>About Me</h2>\n\n         <p>{bio}</p>\n         <div className=\"row\">\n            <div className=\"columns contact-details\">\n               <h2>Contact Details</h2>\n               <p className=\"address\">\n                  <span>{name}</span><br />\n                  <span>{city}, {state} {zip}</span><br />\n                  <span>{email}</span>\n               </p>\n            </div>\n            <div className=\"columns download\">\n               <p>\n                  <a href={resumeDownload} className=\"button\"><i className=\"fa fa-download\"></i>Download Resume</a>\n               </p>\n            </div>\n         </div>\n      </div>\n   </div>\n\n</section>\n   );\n}\n","import React, { Component } from 'react';\n\nexport default function Portfolio({data}) {\n  if(data){\n    var projects = data.projects.map(function(projects){\n      var projectImage = 'images/portfolio/'+projects.image;\n      return <div key={projects.title} className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n          <a href={projects.url} title={projects.title}>\n              <img alt={projects.title} src={projectImage} />\n              <div className=\"overlay\">\n                <div className=\"portfolio-item-meta\">\n                <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                </div>\n              </div>\n            <div className=\"link-icon\"><i className=\"fa fa-link\"></i></div>\n          </a>\n        </div>\n      </div>\n    })\n  }\n\n  return (\n    <section id=\"portfolio\">\n\n    <div className=\"row\">\n\n        <div className=\"twelve columns collapsed\">\n\n          <h1>Check Out Some of My Works.</h1>\n\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n              {projects}\n          </div>\n        </div>\n    </div>\n  </section>\n  );\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport ReactGA from 'react-ga';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './Components/Header';\nimport About from './Components/About';\nimport Portfolio from './Components/Portfolio';\nimport * as resumeData from './resumeData.json';\n\nexport default function App() {\n\n  return (\n    <div className=\"App\">\n      <Header data={resumeData.main}/>\n      <About data={resumeData.main}/>\n      <Portfolio data={resumeData.portfolio}/>\n    </div>\n  );\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}